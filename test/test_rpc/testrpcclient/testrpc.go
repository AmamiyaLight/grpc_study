// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: test_rpc.proto

package testrpcclient

import (
	"context"
	test_rpc2 "grpc_study/test/test_rpc/test_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = test_rpc2.Request
	Response = test_rpc2.Response

	TestRpc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultTestRpc struct {
		cli zrpc.Client
	}
)

func NewTestRpc(cli zrpc.Client) TestRpc {
	return &defaultTestRpc{
		cli: cli,
	}
}

func (m *defaultTestRpc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := test_rpc2.NewTestRpcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
